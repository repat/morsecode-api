{"name":"Morsecode As A Service","tagline":"Documentation morsecode-api.de","body":"### Documentation for [morsecode-api.de](http://www.morsecode-api.de)\r\nThis website documents the installation and usage of [morsecode-api.de](http://morsecode-api.de), a side-project I created to create and play around with REST-APIs, node.js and [Heroku](http://heroku.com). Since it's running there, you can also reach it under [morsecodeapi.herokuapp.com](http://morsecodeapi.herokuapp.com).\r\n\r\nI explained the DNS setup in a [seperate blogpost](http://repat.de/2015/01/domain-von-domain-offensive-bei-heroku-nutzen/) (German). Both _morsecode-api.de_ and _www.morsecode-api.de_ should work, but the _www_ domain is faster. You need to add the `-L` parameter to cURL when using _morsecode-api.de_ without _www_.\r\n\r\n***\r\n\r\n#### GET `/`\r\nRedirects here.\r\n\r\n#### GET `/encode`\r\n##### Request\r\nSubmit one parameter `string` e.g.\r\n\r\n`$ curl http://www.morsecode-api.de/encode/foo`\r\n\r\n##### Response\r\nThe response has two attributes: `plaintext` and `morsecode`, e.g.\r\n```\r\n{\r\n  \"plaintext\":\"FOO\",\r\n  \"morsecode\":\"..-. --- ---\"\r\n}\r\n````\r\n\r\n#### GET `/decode`\r\n##### Request\r\nSubmit one parameter `string` and [URL-encode](https://en.wikipedia.org/wiki/Percent-encoding) the white spaces to `%20` e.g.\r\n\r\n`$ curl http://www.morsecode-api.de/decode/-...%20.-%20.-.`\r\n\r\n##### Response\r\nThe response has two attributes: `plaintext` and `morsecode`, e.g.\r\n```\r\n{\r\n  \"plaintext\":\"BAR\",\r\n  \"morsecode\":\"-... .- .-.\"\r\n}\r\n````\r\n\r\n\r\n#### Sourcecode and deployment\r\nGet the sourcecode from GitHub, install npm modules and start the app.\r\n\r\n```\r\n$ git clone https://github.com/repat/morsecode-api.git\r\n$ cd morsecode-api\r\n$ npm install\r\n$ nodemon server.js\r\n```\r\n\r\nAs you might have noticed, the `Procfile` file is an indicator that this code could also be run on [Heroku](http://heroku.com). Assuming that the [Heroku Toolbelt is installed](https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up) and the repository is [prepared](https://devcenter.heroku.com/articles/getting-started-with-nodejs#prepare-the-app) you can follow the normal [instruction](https://devcenter.heroku.com/articles/getting-started-with-nodejs#deploy-the-app) for deploying an app. Make sure that the `port` variable is set to `process.env.PORT`.\r\n\r\n\r\n#### Testing\r\nI wrote a couple of tests with [frisby](http://frisbyjs.com/) in `frisby_spec.js` using the `www.morsecode-api.de` server. If you use `localhost:8080` instead, you will get an error described in [issue #133](https://github.com/vlucas/frisby/issues/133). This should be the outcome:\r\n```\r\n$ jasmine-node frisby_spec.js \r\nTesting with http://www.morsecode-api.de/\r\n............\r\n\r\nFinished in 2.958 seconds\r\n12 tests, 67 assertions, 0 failures, 0 skipped\r\n```\r\n\r\n#### Licenses\r\n* [node.js](nodejs.org) (MIT)\r\n* [npm](https://www.npmjs.org/) (Artistic License 2.0)\r\n* [morse](https://www.npmjs.com/package/morse) (MIT)\r\n* [restify](http://mcavage.me/node-restify/) (MIT)\r\n* [frisby](http://frisbyjs.com/) (BSD)\r\n\r\n#### Contact\r\n* Homepage: [http://repat.de](http://repat.de)\r\n* e-mail: repat@repat.de\r\n* Twitter: [@repat123](https://twitter.com/repat123 \"repat123 on twitter\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}